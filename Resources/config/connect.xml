<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="sensiolabs_connect.oauth_consumer.class">SensioLabs\Connect\OAuthConsumer</parameter>
        <parameter key="sensiolabs_connect.api.class">SensioLabs\Connect\Api\Api</parameter>
        <parameter key="sensiolabs_connect.api.parser.class">SensioLabs\Connect\Api\Parser\VndComSensiolabsConnectXmlParser</parameter>
        <parameter key="sensiolabs_connect.error_translator.class">SensioLabs\Connect\Bridge\Symfony\Form\ErrorTranslator</parameter>
        <parameter key="sensiolabs_connect.oauth_controller.class">SensioLabs\Bundle\ConnectBundle\Controller\OAuthController</parameter>
        <parameter key="security.authentication.provider.sensiolabs_connect.class">SensioLabs\Connect\Security\Authentication\Provider\ConnectAuthenticationProvider</parameter>
        <parameter key="security.authentication.listener.sensiolabs_connect.class">SensioLabs\Connect\Security\Firewall\ConnectAuthenticationListener</parameter>
        <parameter key="security.authentication.entry_point.sensiolabs_connect.class">SensioLabs\Connect\Security\EntryPoint\ConnectEntryPoint</parameter>
        <parameter key="security.authentication.failure_handler.sensiolabs_connect.class">SensioLabs\Connect\Security\Authentication\ConnectAuthenticationFailureHandler</parameter>
        <parameter key="security.user.provider.sensiolabs_connect_in_memory.class">SensioLabs\Connect\Security\User\ConnectInMemoryUserProvider</parameter>
    </parameters>

    <services>
        <!-- Security -->
        <service id="sensiolabs_connect.oauth_consumer" class="%sensiolabs_connect.oauth_consumer.class%">
            <argument /> <!-- app id -->
            <argument /> <!-- app secret -->
            <argument /> <!-- app scope -->
            <argument /> <!-- oauth endpoint -->
            <argument type="service" id="sensiolabs_connect.buzz" />
            <argument type="service" id="logger" on-invalid="null" />
            <tag name="monolog.logger" channel="sensiolabs_connect" />
        </service>

       <service id="security.authentication.listener.sensiolabs_connect" class="%security.authentication.listener.sensiolabs_connect.class%" parent="security.authentication.listener.abstract" abstract="true">
            <call method="setOAuthConsumer">
                <argument type="service" id="sensiolabs_connect.oauth_consumer" />
            </call>
            <call method="setOAuthCallback">
                <argument>oauth_callback</argument>
            </call>
            <call method="setApi">
                <argument type="service" id="sensiolabs_connect.api" />
            </call>
       </service>

       <service id="security.authentication.provider.sensiolabs_connect" class="%security.authentication.provider.sensiolabs_connect.class%" abstract="true">
           <argument /> <!-- user provider -->
           <argument /> <!-- providerKey -->
       </service>

        <service id="security.authentication.entry_point.sensiolabs_connect" class="%security.authentication.entry_point.sensiolabs_connect.class%">
            <argument type="service" id="sensiolabs_connect.oauth_consumer" />
            <argument type="service" id="security.http_utils" />
            <argument>oauth_callback</argument>
        </service>

        <service id="security.authentication.failure_handler.sensiolabs_connect" class="%security.authentication.failure_handler.sensiolabs_connect.class%">
            <argument type="service" id="security.context" />
            <argument type="service" id="logger" />
        </service>

        <service id="security.user.provider.sensiolabs_connect_in_memory" class="%security.user.provider.sensiolabs_connect_in_memory.class%" abstract="true" public="false">
        </service>

        <service id="sensiolabs_connect.oauth_controller" class="%sensiolabs_connect.oauth_controller.class%">
            <argument type="service" id="security.authentication.entry_point.sensiolabs_connect" />
        </service>

        <!-- Parser -->
        <service id="sensiolabs_connect.api.parser" class="%sensiolabs_connect.api.parser.class%">
        </service>

        <!-- Helper -->
        <service id="sensiolabs_connect.error_translator" class="%sensiolabs_connect.error_translator.class%">
        </service>

        <!-- Api -->
        <service id="sensiolabs_connect.api" class="%sensiolabs_connect.api.class%">
            <argument /> <!-- api endpoint -->
            <argument type="service" id="sensiolabs_connect.buzz" />
            <argument type="service" id="sensiolabs_connect.api.parser" />
            <argument type="service" id="logger" on-invalid="null" />
            <tag name="monolog.logger" channel="sensiolabs_connect" />
        </service>

        <!-- Browser -->
        <service id="sensiolabs_connect.buzz.message_factory" class="Buzz\Message\Factory\Factory" public="false" />
        <service id="sensiolabs_connect.buzz.client" class="Buzz\Client\Curl" public="false" />
        <service id="sensiolabs_connect.buzz" class="Buzz\Browser" public="false">
            <argument type="service" id="sensiolabs_connect.buzz.client" />
            <argument type="service" id="sensiolabs_connect.buzz.message_factory" />
        </service>

        <!-- Collector -->
        <service id="sensiolabs_connect.collector.api" class="SensioLabs\Bundle\ConnectBundle\Collector\ApiCollector">
            <tag name="data_collector" id="sensiolabs_connect" template="SensioLabsConnectBundle:Collector:connect"/>
        </service>
    </services>
</container>
